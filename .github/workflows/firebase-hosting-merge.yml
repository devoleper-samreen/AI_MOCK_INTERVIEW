# Auto deploy to Firebase Hosting when code is pushed to main
# name: Deploy to Firebase Hosting on merge & push
# on:
#   push:
#     branches:
#       - main
# jobs:
#   build_and_deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       # Setup Node.js (same version as local)
#       - uses: actions/setup-node@v4
#         with:
#           node-version: 20

#       # Setup pnpm
#       - uses: pnpm/action-setup@v2
#         with:
#           version: 8 # pnpm version used

#       # Create .env.production
#       - name: Create .env.production
#         run: |
#           echo "VITE_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}" >> .env.production
#           echo "VITE_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}" >> .env.production
#           echo "VITE_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}" >> .env.production
#           echo "VITE_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}" >> .env.production
#           echo "VITE_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}" >> .env.production
#           echo "VITE_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}" >> .env.production
#           echo "VITE_GEMINI_API_KEY=${{ secrets.VITE_GEMINI_API_KEY }}" >> .env.production

#       - name: Verify .env.production
#         run: |
#           cat .env.production

#       # Install dependencies & build
#       - run: pnpm install
#       - run: pnpm run build -- --mode production

#       # Deploy to Firebase
#       - uses: FirebaseExtended/action-hosting-deploy@v0
#         with:
#           repoToken: ${{ secrets.GITHUB_TOKEN }}
#           firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_AI_MOCK_INTERVIEW_DB3E3 }}
#           channelId: live
#           projectId: ai-mock-interview-db3e3

name: Build and Deploy to Firebase

on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # clone code
      - name: Checkout code
        uses: actions/checkout@v3

        # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

        # Install pnpm
      - name: Install pnpm
        run: pnpm/action-setup@v3

        # Install dependencies
      - name: Install dependencies
        run: pnpm install

        # Build project
      - name: Build project
        env:
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{secrets.VITE_FIREBASE_MESSAGING_SENDER_ID}}
          VITE_FIREBASE_APP_ID: ${{secrets.VITE_FIREBASE_APP_ID}}
          VITE_GEMINI_API_KEY: ${{secrets.VITE_GEMINI_API_KEY}}

        run: pnpm run build

      - name: Upload build folder
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: dist # ya tumhare build output ka folder

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build folder
        uses: actions/download-artifact@v4
        with:
          name: build
          path: dist

      - name: Deploy to Firebase
        uses: w9jds/firebase-action@v2.2.0
        with:
          args: deploy --only hosting
        env:
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_AI_MOCK_INTERVIEW_DB3E3 }}
          PROJECT_ID: your-firebase-project-id
